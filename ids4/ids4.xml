<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ids4</name>
    </assembly>
    <members>
        <member name="M:ids4.Helper.Extensions.IsPkceClientAsync(IdentityServer4.Stores.IClientStore,System.String)">
            <summary>
            Determines whether the client is configured to use PKCE.
            </summary>
            <param name="store">The store.</param>
            <param name="client_id">The client identifier.</param>
            <returns></returns>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.AccountController">
            <summary>
            This sample controller implements a typical login/logout/provision workflow for local and external accounts.
            The login service encapsulates the interactions with the user data store. This data store is in-memory only and cannot be used for production!
            The interaction service provides a way for the UI to communicate with identityserver for validation and context retrieval
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Login(System.String)">
            <summary>
            Entry point into the login workflow
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Login(IdentityServerHost.Quickstart.UI.LoginInputModel,System.String)">
            <summary>
            Handle postback from username/password login
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Logout(System.String)">
            <summary>
            Show logout page
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.AccountController.Logout(IdentityServerHost.Quickstart.UI.LogoutInputModel)">
            <summary>
            Handle logout page postback
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ExternalController.Challenge(System.String,System.String)">
            <summary>
            initiate roundtrip to external authentication provider
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ExternalController.Callback">
            <summary>
            Post processing of external authentication
            </summary>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.ConsentController">
            <summary>
            This controller processes the consent UI
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ConsentController.Index(System.String)">
            <summary>
            Shows the consent screen
            </summary>
            <param name="returnUrl"></param>
            <returns></returns>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.ConsentController.Index(IdentityServerHost.Quickstart.UI.ConsentInputModel)">
            <summary>
            Handles the consent screen postback
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.Extensions.IsNativeClient(IdentityServer4.Models.AuthorizationRequest)">
            <summary>
            Checks if the redirect URI is for a native client.
            </summary>
            <returns></returns>
        </member>
        <member name="T:IdentityServerHost.Quickstart.UI.GrantsController">
            <summary>
            This sample controller allows a user to revoke grants given to clients
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.GrantsController.Index">
            <summary>
            Show list of grants
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.GrantsController.Revoke(System.String)">
            <summary>
            Handle postback to revoke a client
            </summary>
        </member>
        <member name="M:IdentityServerHost.Quickstart.UI.HomeController.Error(System.String)">
            <summary>
            Shows the error page
            </summary>
        </member>
    </members>
</doc>
